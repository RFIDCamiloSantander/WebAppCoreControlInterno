@model List<Cargo>

@{
    Func<dynamic, object> cargoTemplate =
    @<tr>
        <td>@item.Cargo1</td>
        <td>
            <a class="btn btn-primary" href="Cargo/Editar/@item.IdCargo">Editar</a>
            <a class="btn btn-danger" href="Cargo/Eliminar/@item.IdCargo">Eliminar</a>
        </td>
    </tr>;
}

<div class="container mt-5">
    <div class="row">
        <div class="col">
            <h1>Cargos</h1>
        </div>
        <div class="col text-end">
            <a asp-action="Create" class="btn btn-primary">

                Crear

            </a>
        </div>
    </div>
</div>
<div class="container">
    <table class="table">
        <thead>
            <tr>
                <th>Cargo</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cargo in Model)
            {
                @cargoTemplate(cargo)
            }
        </tbody>
    </table>
</div>





@*<!-- COMENTARIOS PARA MI-->

        <!--<tr>-->
        <td>@Html.DisplayFor(m => cargo.Cargo1)</td>
    <!--<td>
        <a class="btn btn-primary" href="Cargo/Editar/@cargo.IdCargo">Editar</a>-->
    @*Distintas Formas de lograr lo mismo
    @*Este Funca  --  <a class="btn btn-primary" asp-controller="Cargo" asp-action="Editar" asp-route-id="1">Editar</a>
    @*Este Funca  --  @Html.ActionLink("Editar", "Editar", new { id = cargo.IdCargo })
    <!--<a class="btn btn-danger" href="Cargo/Eliminar/@cargo.IdCargo">Eliminar</a>
        </td>
    </tr>-->
*@